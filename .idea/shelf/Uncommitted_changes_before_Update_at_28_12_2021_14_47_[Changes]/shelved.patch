Index: python/lesson1/zd1.2.py
===================================================================
diff --git a/python/lesson1/zd1.2.py b/python/lesson1/zd1.2.py
deleted file mode 100644
--- a/python/lesson1/zd1.2.py	(revision d7927f4e7102b066d28cdcec49704f4564b23271)
+++ /dev/null	(revision d7927f4e7102b066d28cdcec49704f4564b23271)
@@ -1,3 +0,0 @@
-duration = 400153
-
-def convert_time(duration: int):
Index: python/lesson1/Musin_Aydar_dz_2.1.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/python/lesson1/Musin_Aydar_dz_2.1.py b/python/lesson1/Musin_Aydar_dz_2.1.py
new file mode 100644
--- /dev/null	(date 1640683746747)
+++ b/python/lesson1/Musin_Aydar_dz_2.1.py	(date 1640683746747)
@@ -0,0 +1,21 @@
+"""К каждому элементу списка добавляет 17 и вычисляет сумму чисел списка,
+        сумма цифр которых делится нацело на 7"""
+
+def sum_list_1(dataset: list) -> int:
+    answer = []
+    list_1 = [i for i in range(number) if i % 2 != 0]
+    """Вычисляет сумму чисел списка dataset, сумма цифр которых делится нацело на 7"""
+    for n in list_1:
+        x = n**3
+        z = [int(i) for i in str(x) + "17"]
+        if sum(z) % 7 == 0:
+            answer.append(sum(z))
+
+    return sum(answer)
+
+number = int(input("dataset: "))
+
+my_list = []
+
+result_1 = sum_list_1(my_list)
+print(result_1)
Index: python/lesson1/Musin_Aydar_dz_2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Создать список, состоящий из кубов нечётных чисел от 1 до 1000 (куб X - третья степень числа X):\r\n# Вычислить сумму тех чисел из этого списка, сумма цифр которых делится нацело на 7.\r\n# Например, число `19 ^ 3 = 6859` будем включать в сумму, так как `6 + 8 + 5 + 9 = 28` – делится нацело на `7`.\r\n\r\n\r\ndef sum_list_1(dataset: list) -> int:\r\n    answer = []\r\n\r\n    \"\"\"Вычисляет сумму чисел списка dataset, сумма цифр которых делится нацело на 7\"\"\"\r\n    for n in list_1:\r\n        x = n ** 3\r\n        z = [int(i) for i in str(x)]\r\n        if sum(z) % 7 == 0:\r\n            answer.append(sum(z))\r\n\r\n    return int(answer)\r\n\r\n\r\nnumber = 1000\r\nlist_1 = [i for i in range(number) if i % 2 != 0]\r\nmy_list = []\r\n\r\nresult_1 = sum_list_1(my_list)\r\nprint(result_1)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/python/lesson1/Musin_Aydar_dz_2.py b/python/lesson1/Musin_Aydar_dz_2.py
--- a/python/lesson1/Musin_Aydar_dz_2.py	(revision d7927f4e7102b066d28cdcec49704f4564b23271)
+++ b/python/lesson1/Musin_Aydar_dz_2.py	(date 1640684188956)
@@ -8,17 +8,24 @@
 
     """Вычисляет сумму чисел списка dataset, сумма цифр которых делится нацело на 7"""
     for n in list_1:
-        x = n ** 3
+        x = n**3
         z = [int(i) for i in str(x)]
         if sum(z) % 7 == 0:
             answer.append(sum(z))
 
-    return int(answer)
+    return sum(answer)
 
-
-number = 1000
+number = int(input("dataset: "))
 list_1 = [i for i in range(number) if i % 2 != 0]
 my_list = []
 
 result_1 = sum_list_1(my_list)
 print(result_1)
+
+
+
+
+
+
+
+
